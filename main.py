import module


# Создайте класс МояСтрока
# где будут доступны все возможности str и дополнительно хранится имя автора строки и время создания (time.time)
def task1():
    my_str = module.task1.MyString("строка", "Иван")
    print(my_str.title())


# Создайте класс Архив, который хранит пару свойств.
# Например, число и строку.
# При нового экземпляра класса, старые данные из ранее созданных экземпляров сохраняются в пару списков-архивов,
# которые также являются свойствами экземпляра.
def task2():
    my_archive1 = module.task2.Archive(5, "пять")
    my_archive2 = module.task2.Archive(2, "два")
    my_archive3 = module.task2.Archive(3, "три")
    print(module.task2.Archive.archive_lines, module.task2.Archive.archive_numbers)
    print(my_archive1, repr(my_archive1), sep='\n')
    print(my_archive1.__doc__)


# Дорабатываем класс прямоугольник из прошлого семинара.
# Добавьте возможность сложения и вычитания.
# При этом должен создаваться новый экземпляр прямоугольника.
# Складываем и вычитаем периметры, а не длинну и ширину.
# При вычитании не допускайте отрицательных значений.
# Доработайте прошлую задачу.
# Добавьте сравнение прямоугольников по площади.
# Должны работать все шесть операций сравнения
def task3():
    r1 = module.task3.Rectangle(2, 3)
    r2 = module.task3.Rectangle(3, 5)
    r3 = r1 - r2
    print(r1, r2, r3, sep='\n')
    print(f"{r1 > r2 = }")
    print(f"{r1 < r2 = }")
    print(f"{r1 == r2 = }")
    print(f"r1 != r2 = {r1 != r2}")
    print(f"{r1 <= r2 = }")
    print(f"{r1 >= r2 = }")


# Контекст: Вы разработчик игры. Ваша задача - реализовать симуляцию боя между двумя персонажами, названными "Воин".
# Требования к задаче:
# Инициализация Персонажей: Создайте два объекта "Воин", каждый с начальным здоровьем в 100 очков.
# Механика Боя: Воины атакуют друг друга в случайном порядке. При этом, воин, который атакует, не теряет здоровья.
# Потери от Удара: Когда воин атакует, здоровье противника уменьшается на случайно от 10 до 15 очков за каждый удар.
# Отображение Информации:
# После каждой атаки выводите сообщение с указанием, кто атаковал и сколько здоровья осталось у атакованного воина.
# Конец Боя: Бой заканчивается, когда здоровье одного из воинов достигает нуля или меньше.
# При этом должно быть выведено сообщение о победителе.
# Цель: Реализуйте программу на Python, которая моделирует описанный сценарий боя,
# соответствуя всем вышеуказанным требованиям.
def task4():
    from module.task4 import Warrior, fight
    w1, w2, w3, w4, w5 = Warrior("1"), Warrior("2"), Warrior("3"), Warrior("4"), Warrior("5")
    print(*fight([w1, w2, w3, w4, w5]))


def main():
    # task1()
    # task2()
    # task3()
    task4()


if __name__ == '__main__':
    main()
